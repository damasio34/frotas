<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <configSections>
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
  </configSections>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <add key="vvsSTS:IssuerName" value="dev.sts.vvssistemas.com.br" />
    <add key="vvsSTS:NomeCertificado" value="CN=VVS" />
  </appSettings>

  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
    
  </system.web>

  <system.identityModel>
    <identityConfiguration>
      <securityTokenHandlers>
        <remove type="System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler, System.Identitymodel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add type="Vvs.Infraestrutura.Security.STS.Tokens.VvsSecurityTokenHandler, Vvs.Infraestrutura.Security.STS, Version=1.0.0.0, Culture=neutral" />
      </securityTokenHandlers>
    </identityConfiguration>
  </system.identityModel>

  <system.serviceModel>

    <extensions>
      <behaviorExtensions>
        <add name="customErrorHandlingBehaviorExtension" type="Vvs.Infraestrutura.Security.STS.ErrorHandler.ErrorHandlingBehaviorExtensionElement, Vvs.Infraestrutura.Security.STS, Version=1.0.0.0, Culture=neutral" />
      </behaviorExtensions>
    </extensions>

    <serviceHostingEnvironment aspNetCompatibilityEnabled="false" multipleSiteBindingsEnabled="true">
      <serviceActivations>
        <add relativeAddress="./sts.svc"
             factory="Vvs.Infraestrutura.Seguranca.STS.SecurityTokenServiceHostFactory"
             service="System.ServiceModel.Security.WSTrustServiceContract"
             />
      </serviceActivations>
    </serviceHostingEnvironment>

    <services>
      <service name="System.ServiceModel.Security.WSTrustServiceContract" behaviorConfiguration="stsBehavior">
        <endpoint address="" 
                  binding="ws2007HttpBinding"
                  bindingConfiguration="bindingConfig"
                  contract="System.ServiceModel.Security.IWSTrust13SyncContract" />
        <endpoint address="mex" kind="mexEndpoint" />
      </service>
    </services>

    <bindings>
      <ws2007HttpBinding>
        <binding name="bindingConfig">
          <security mode="Message">

            <!-- 
              ********************************
              ** negotiateServiceCredential **
              ********************************
                Default value: True;
                Setting this property to 'true', requires WS-Trust and WS-SecureConversation to be supported by the client 
              and the service. Setting this property to 'false' does not require WS-Trust or WS-SecureConversation to be supported.
                For Anonymous, Username or Certificate client credential types, setting this property to false implies that the service 
              certificate must be available at the client out of band and that the client must specify the service's certificate to use.
            -->

            <message clientCredentialType="UserName" 
                     negotiateServiceCredential="false" 
                     establishSecurityContext="false" />
          </security>
        </binding>
      </ws2007HttpBinding>
    </bindings>

    <behaviors>
      <serviceBehaviors>
        <behavior name="stsBehavior">
          <customErrorHandlingBehaviorExtension />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceMetadata httpGetEnabled="true" />

          <serviceCredentials>
            <clientCertificate>
              <authentication certificateValidationMode="None"/>
            </clientCertificate>
            <serviceCertificate storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindBySubjectDistinguishedName" findValue="CN=VVS" />
          </serviceCredentials>

        </behavior>
      </serviceBehaviors>
    </behaviors>

    <protocolMapping>
      <add scheme="https" binding="ws2007HttpBinding" />
    </protocolMapping>

    <diagnostics>
      <endToEndTracing activityTracing="true" messageFlowTracing="True" propagateActivity="true"/>
      <messageLogging logEntireMessage="true"
                      logKnownPii="true"
                      logMalformedMessages="true"
                      logMessagesAtServiceLevel="true"
                      logMessagesAtTransportLevel="true" />
    </diagnostics>
  </system.serviceModel>

  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <directoryBrowse enabled="true" />
    
  </system.webServer>

  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="All" propagateActivity="true">
        <listeners>
          <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="c:\temp\log\STS.System.ServiceModel.svclog" />
        </listeners>
      </source>
      <source name="CardSpace">
        <listeners>
          <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="c:\temp\log\STS.CardSpace.svclog" />
        </listeners>
      </source>
      <source name="System.IO.Log">
        <listeners>
          <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="c:\temp\log\STS.System.IO.Log.svclog" />
        </listeners>
      </source>
      <source name="System.Runtime.Serialization">
        <listeners>
          <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="c:\temp\log\STS.System.Runtime.Serialization.svclog" />
        </listeners>
      </source>
      <source name="System.IdentityModel" switchValue="All" >
        <listeners>
          <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="c:\temp\log\STS.System.IdentityModel.svclog" />
        </listeners>
      </source>
    </sources>
    
  </system.diagnostics>
  
</configuration>
